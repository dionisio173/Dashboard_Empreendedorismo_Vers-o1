
dados_ficticios <- read_excel("dados_ficticios_com_lucro.xlsx")

# Definir a interface do usuário
ui <- fluidPage(
  theme = shinytheme("flatly"),
  titlePanel("Dashboard Empreendedorismo"),
  navbarPage("Navegação",
             tabPanel("PAM_VERDE",
                      sidebarLayout(
                        sidebarPanel(
                          selectInput("projeto", "Projeto:", choices = c("Todos", unique(dados_ficticios$Projeto))),
                          selectInput("cidade", "Cidade:", choices = c("Todas", unique(dados_ficticios$Cidade))),
                          selectInput("ano", "Ano do Projeto:", choices = c("Todos", unique(dados_ficticios$Ano_Projeto))),
                          selectInput("ciclo", "Ciclo:", choices = c("Todos", unique(dados_ficticios$Ciclo))),
                          downloadButton("downloadData", "Baixar Dados")
                        ),
                        mainPanel(
                          tabsetPanel(
                            tabPanel("Visão Geral", 
                                     wellPanel(
                                       withSpinner(plotOutput("resumo"))
                                     )
                            ),
                            tabPanel("Analise de Lucro",
                                     column(12,
                                            wellPanel(
                                              withSpinner(plotOutput("grafico_lucro_mes"))
                                            ),
                                            column(6,
                                                   wellPanel(("Grafico de Comparacão")),
                                                   (withSpinner(plotOutput("Boxplot"), color = "black"))
                                            )
                                     )
                            ),
                            
                            tabPanel("Tabela de Dados", 
                                     wellPanel(
                                       withSpinner(dataTableOutput("tabela_dados"))
                                     )
                            )
                          )
                        )
                      )
             ),
             tabPanel("PEGADA DE CARBONO",
                      wellPanel(
                        
                      )
             )
  )
)
# Definir o servidor
server <- function(input, output) {
  
  # Função para download dos dados em formato Excel
  output$downloadData <- downloadHandler(
    filename = function() {
      paste("dados_ficticios", ".xlsx", sep="")
    },
    content = function(file) {
      write_excel_csv(dados_ficticios, file, row_names = FALSE)
    }
  )  
  
  # Subconjunto dos dados com base nos filtros selecionados
  dados_filtrados <- reactive({
    df <- dados_ficticios
    if (input$projeto != "Todos") {
      df <- df[df$Projeto == input$projeto, ]
    }
    if (input$cidade != "Todas") {
      df <- df[df$Cidade == input$cidade, ]
    }
    if (input$ano != "Todos") {
      df <- df[df$Ano_Projeto == as.numeric(input$ano), ]
    }
    if (input$ciclo != "Todos") {
      df <- df[df$Ciclo == input$ciclo, ]
    }
    df
  })
  
  output$resumo <- renderPlot({
    # Calcular valores e percentagens
    dados_resumo <- dados_filtrados() %>%
      group_by(Projeto) %>%
      summarise(n = n()) %>%
      mutate(Percentagem = n / sum(n) * 100)
    
    ggplot(dados_resumo, aes(x = Projeto, y = n, fill = Projeto)) +
      geom_bar(stat = "identity") +
      geom_text(aes(label = paste0(n, " (", round(Percentagem, 1), "%)")),
                position = position_stack(vjust = 0.5), size = 9) +
      labs(x = "Projeto", y = "Número de Inscritas", title = "Número de Empreendedoras Inscritas por Projeto") +
      theme(legend.position = "none")
  })
  ########################LUCRO MES########################################################
  
  output$grafico_lucro_mes <- renderPlot({
    dados_filtrados() %>%
      group_by(Periodo_Mes) %>%
      summarise(Media_Lucro = mean(Lucro)) %>%
      mutate(Periodo_Mes = factor(Periodo_Mes, levels = c("Janeiro", "Fevereiro", "Marco", "Abril", "Maio", "Junho", 
                                                          "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"))) %>%
      ggplot(aes(x = Periodo_Mes, y = Media_Lucro)) +
      geom_bar(stat = "identity", fill = "Purple") +
      labs(x = "Mês", y = "Média de Lucro", title = "Média de Lucro por Mês")
  })
  
  #############################TABELA GERAL#########################################
  output$tabela_dados <- renderDataTable({
    dados_filtrados()
  })
  
}

# Executar o aplicativo
shinyApp(ui = ui, server = server)